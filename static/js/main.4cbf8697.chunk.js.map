{"version":3,"sources":["Boxes.js","App.js","reportWebVitals.js","index.js"],"names":["Boxes","time","evaluatee","result","setPersonResult","ref","React","useRef","def","F","text","color","gc","gr","C","S","I","handleClick","useCallback","box","Object","keys","i","current","classList","remove","add","Box","forwardRef","children","name","rest","className","onClick","entries","map","obj","el","style","backgroundColor","gridColumn","gridRow","hostname","App","useState","allData","setAllData","tmpId","setTmpId","id","setId","setResult","done","setDone","submitting","setSubmitting","filled","setFilled","comment","setComment","theme","createTheme","typography","fontFamily","palette","mode","Question","props","pstr","isOptional","Button","removeid","filter","x","AddPeople","Autocomplete","autoHighlight","options","includes","label","renderInput","params","TextField","size","onChange","e","newValue","newid","tmp","JSON","parse","stringify","push","now","future","handleAdd","a","fetch","method","headers","body","hash","window","location","search","slice","status","alert","rows","r","Timestamp","Date","toString","EvaluatorID","EvaluateeID","Now","Future","Comment","then","length","console","log","useEffect","xxx","evalList","concat","forEach","json","every","ThemeProvider","maxWidth","margin","fullWidth","multiline","value","target","variant","disabled","IconButton","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cbf8697.chunk.js","sourcesContent":["import React from 'react'\nimport \"./Boxes.scss\"\n\nexport default function Boxes({ time, evaluatee, result, setPersonResult }) {\n  \n  const ref = React.useRef({})\n\n  const def = {\n    F: {text: \"Frontliners\", color: \"#0078D7\", gc: \"1/2\", gr: \"1/2\"},\n    C: {text: \"Content\", color: \"#F7630C\", gc: \"1/2\", gr: \"2/3\"},\n    S: {text: \"Corp Sec\", color: \"#68768A\", gc: \"2/3\", gr: \"1/3\"},\n    I: {text: \"Infrastructure\", color: \"#10893E\", gc: \"1/3\", gr: \"3/4\"},\n  }\n\n  const handleClick = React.useCallback((box) => {\n    for (const i of Object.keys(def)) {\n      if (i !== box)\n        ref.current[i].classList.remove(\"highlight\")\n    }\n    ref.current[box].classList.add(\"highlight\")\n    setPersonResult(evaluatee, time, box)\n  }, [evaluatee, time, setPersonResult])\n\n  const Box = React.forwardRef(({children, name, ...rest}, ref) => {\n    return(\n      <div\n        {...rest}\n        ref={ref}\n        className={`${name} ${name === result[time] ? \"highlight\" : \"\"}`}\n        onClick={() => handleClick(name)}\n      >\n        {children}\n      </div>\n    )\n  })\n\n  return(\n    <div className=\"boxes\">\n      {Object.entries(def).map((obj, i) => (\n        <Box\n          name={obj[0]}\n          ref={el => ref.current[obj[0]] = el}\n          style={{\n            backgroundColor: obj[1].color + \"99\",\n            gridColumn: obj[1].gc,\n            gridRow: obj[1].gr,\n          }}\n          key={`box${i}`}\n        >\n          {obj[1].text}\n        </Box>)\n      )}\n      {/* <Box name=\"a\" ref={el => ref.current[\"a\"] = el}>Frontliners</Box>\n      <Box name=\"b\" ref={el => ref.current[\"b\"] = el}>Content</Box>\n      <Box name=\"c\" ref={el => ref.current[\"c\"] = el}>Corp Sec</Box>\n      <Box name=\"d\" ref={el => ref.current[\"d\"] = el}>Infrastructure</Box> */}\n    </div>\n  )\n}","import React from 'react';\nimport './App.scss';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Boxes from \"./Boxes\"\n\n// const hostname = \"http://localhost:3333\"\nconst hostname = \"https://artt-survey.herokuapp.com\"\n\nfunction App() {\n\n  const [allData, setAllData] = React.useState({})\n  const [tmpId, setTmpId] = React.useState('')\n  const [id, setId] = React.useState('')\n  const [result, setResult] = React.useState([])\n  const [done, setDone] = React.useState(false)\n  const [submitting, setSubmitting] = React.useState(false)\n  const [filled, setFilled] = React.useState(false)\n  const [comment, setComment] = React.useState('')\n\n  const theme = createTheme({\n    typography: {\n      fontFamily: `\"Mali\"`,\n    },\n    palette: {\n      mode: 'dark',\n    },\n  })\n\n  function Question(props) {\n    if (!props.result)\n      return null\n    let pstr = allData[props.evaluatee].name\n    if (id === props.evaluatee) {\n      pstr = \"คุณ\" \n    }\n    return(\n      <>\n        <div className=\"qtitle\">คุณคิดว่างาน<span className=\"colorize\">{pstr}</span>อยากทำงานในกล่องไหน</div>\n        {props.isOptional &&\n          <Button onClick={() => handleRemove(props.evaluatee)} color=\"secondary\">ลบชื่อออก</Button>\n        }\n        <div className=\"boxbox\">\n          <div>\n            <p>ในตอนนี้</p>\n            <Boxes time={'now'} {...props} />\n          </div>\n          <div>\n            <p>ในอีก 3–5 ปี</p>\n            <Boxes time={'future'} {...props} />\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  function AddPeople() {\n\n    // const curid = React.useState('')\n\n    return(\n      <div className=\"question\">\n        <Autocomplete\n          // disablePortal\n          autoHighlight\n          id=\"combo-box-demo\"\n          options={Object.entries(allData).filter(obj => !result.map(x => x.evaluatee).includes(obj[0])).map(obj => {\n            return {label: obj[1].name, id: obj[0]}\n          })}\n          renderInput={(params) => <TextField {...params} label=\"ค้นหาชื่อ เพื่อเพิ่มคนอื่น ๆ (optional)\" size=\"small\" />}\n          onChange={(e, newValue) => handleAdd(newValue.id)}\n        />\n      </div>\n    )\n  }\n\n  React.useEffect(() => {\n    if (Object.keys(allData).length > 0 && id !== '') {\n      let tmp = []\n      let xxx = [id]\n      if (allData[id].evalList)\n        xxx = xxx.concat(allData[id].evalList)\n      xxx.forEach(x => {\n        tmp.push({\n          evaluatee: x,\n          now: '',\n          future: '',\n        })\n      })\n      setResult(tmp)\n    }\n  }, [allData, id])\n\n  async function handleGo() {\n    // // check hash\n    const r = await fetch(`${hostname}/checkuser`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        id: tmpId,\n        hash: window.location.search.slice(1),\n      })\n    })\n    if (r.status !== 200) {\n      alert(\"รหัสพนักงานไม่ตรงกับลิงค์\")\n      return\n    }\n    if (!(Object.keys(allData).includes(tmpId))) {\n      alert(\"กรุณาตรวจสอบรหัสพนักงานอีกครั้ง\")\n      return\n    }\n    setId(tmpId)\n  }\n\n  React.useEffect(() => {\n    if (Object.keys(allData).length > 0) {\n      console.log('Data loaded')\n    }\n  }, [allData])\n\n  React.useEffect(() => {\n    fetch(`${hostname}/alldata`).then(x => x.json()).then(x => {\n      setAllData(x)\n    })\n  }, [])\n\n  React.useEffect(() => {\n    setFilled(checkResult())\n  }, [result])\n\n  function checkResult() {\n    if (!result) return false\n    return result.every(x => {\n      if (x.now === '' || x.future === '')\n        return false\n      return true\n    })\n  }\n\n  function handleAdd(newid) {\n    let tmp = JSON.parse(JSON.stringify(result))\n    tmp.push({\n      evaluatee: newid,\n      now: '',\n      future: ''\n    })\n    setResult(tmp)\n  }\n\n  function handleRemove(removeid) {\n    // no need to copy since filter creates a new array\n    setResult(result.filter(x => x.evaluatee !== removeid))    \n  }\n\n  async function handleSubmit() {\n    setSubmitting(true)\n    const rows = result.map((r, i) => ({\n      Timestamp: new Date().toString(),\n      EvaluatorID: id,\n      EvaluateeID: r.evaluatee,\n      Now: r.now,\n      Future: r.future,\n      Comment: i === 0 ? comment : \"\",\n    }))\n    await fetch(`${hostname}/submit`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(rows)\n    }).then(x => {\n    if (x.status === 200)\n      setDone(true)\n    })\n  }\n\n  function setPersonResult(evaluatee, time, box) {\n    let tmp = JSON.parse(JSON.stringify(result))\n    for (let i = 0; i < tmp.length; i ++) {\n      if (tmp[i].evaluatee === evaluatee) {\n        tmp[i][time] = box\n        break\n      }\n    }\n    console.log(tmp)\n    setResult(tmp)\n  }\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <header className=\"App-header\">\n          {!done\n          ? <>\n              {!id || !result\n              ? <div>\n                  <p>โปรดระบุรหัสพนักงานของท่าน</p>\n                  <div>\n                    <TextField\n                      id=\"outlined-basic\"\n                      label=\"รหัสพนักงาน\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      value={tmpId}\n                      onChange={e => setTmpId(e.target.value)}\n                    />\n                    <IconButton aria-label=\"go\" onClick={handleGo} disabled={Object.keys(allData).length === 0}>\n                      <NavigateNextIcon />\n                    </IconButton>\n                  </div>\n                </div>\n              : <div className=\"page\">\n                  <h2>สวัสดีครับคุณ{allData[id].name}!</h2>\n                  {/* <p>อธิบาย อธิบาย อธิบาย อธิบาย</p> */}\n                  {\n                    result.map((r, i) => {\n                      const isOptional = r.evaluatee !== id && !allData[id].evalList.includes(r.evaluatee)\n                      return(\n                        <div className={`question ${isOptional ? \"optional\" : \"\"}`} key={`q${i}`}>\n                          <Question evaluatee={r.evaluatee} result={r} setPersonResult={setPersonResult} isOptional={isOptional} />\n                        </div>\n                      )\n                    })\n                  }\n                  <AddPeople />\n                  <div style={{maxWidth: \"600px\", margin: \"40px auto\"}}>\n                    <TextField\n                      label=\"ความกังวล ความเห็น ข้อเสนอแนะ\"\n                      fullWidth\n                      multiline\n                      rows={4}\n                      value={comment}\n                      onChange={e => setComment(e.target.value)}\n                    />\n                  </div>\n                  <div>\n                    <Button variant=\"contained\" onClick={handleSubmit} disabled={!filled || submitting}>ส่งคำตอบ</Button>\n                  </div>\n\n                </div>\n              }\n            </>\n          : <div>ขอบคุณครับ เราได้รับคำตอบของคุณแล้ว</div>\n          }\n\n        </header>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}